name: Deploy Al Safwan Marine Todo App

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.25'

    - name: Build for Linux
      run: |
        go mod tidy
        GOOS=linux GOARCH=amd64 go build -o todo-app-linux main.go
        echo "Build size: $(du -h todo-app-linux)"

    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        password: ${{ secrets.SERVER_PASSWORD }}
        script: |
          set -e  # Exit on any error

          cd /home/alsafwan/alsafwanmarine-project/applications/site1/

          # Create backup of current binary
          if [ -f site1 ]; then
            echo "📦 Backing up current binary..."
            cp site1 site1.backup.$(date +%Y%m%d_%H%M%S)
          fi

          echo "⏳ Waiting for new binary upload..."

    - name: Upload new binary and assets
      run: |
        # Install sshpass and use scp to copy the binary and assets
        sudo apt-get update && sudo apt-get install -y sshpass
        
        # Upload binary
        sshpass -p "${{ secrets.SERVER_PASSWORD }}" scp -o StrictHostKeyChecking=no \
          todo-app-linux \
          "${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:/home/alsafwan/alsafwanmarine-project/applications/site1/todo-app-linux.new"
        
        # Upload templates directory
        sshpass -p "${{ secrets.SERVER_PASSWORD }}" scp -r -o StrictHostKeyChecking=no \
          templates \
          "${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:/home/alsafwan/alsafwanmarine-project/applications/site1/"
        
        # Upload static directory  
        sshpass -p "${{ secrets.SERVER_PASSWORD }}" scp -r -o StrictHostKeyChecking=no \
          static \
          "${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:/home/alsafwan/alsafwanmarine-project/applications/site1/"

    - name: Replace binary and restart service
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        password: ${{ secrets.SERVER_PASSWORD }}
        script: |
          set -e  # Exit on any error

          cd /home/alsafwan/alsafwanmarine-project/applications/site1/

          # Move new binary into place
          echo "🔄 Replacing binary..."
          mv todo-app-linux.new todo-app-linux
          chmod +x todo-app-linux

          # Stop service
          echo "🛑 Stopping site1 service..."
          echo "${{ secrets.SERVER_PASSWORD }}" | sudo -S systemctl stop site1

          # Replace binary
          cp todo-app-linux site1

          # Start service
          echo "🚀 Starting site1 service..."
          echo "${{ secrets.SERVER_PASSWORD }}" | sudo -S systemctl start site1

          # Wait for service to be ready
          sleep 3

          # Verify deployment
          echo "✅ Verifying deployment..."
          if curl -f -s http://localhost:8001/ > /dev/null; then
            echo "✅ Deployment successful! Site is responding."

            # Clean up old backups (keep last 5)
            ls -t site1.backup.* 2>/dev/null | tail -n +6 | xargs rm -f 2>/dev/null || true
          else
            echo "❌ Deployment verification failed!"

            # Rollback
            echo "🔄 Rolling back to previous version..."
            if ls site1.backup.* 1> /dev/null 2>&1; then
              latest_backup=$(ls -t site1.backup.* | head -1)
              cp "$latest_backup" site1
              echo "${{ secrets.SERVER_PASSWORD }}" | sudo -S systemctl start site1
              echo "✅ Rolled back to previous version"
            fi
            exit 1
          fi

